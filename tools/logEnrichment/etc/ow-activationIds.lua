--
-- Licensed to the Apache Software Foundation (ASF) under one or more
-- contributor license agreements.  See the NOTICE file distributed with
-- this work for additional information regarding copyright ownership.
-- The ASF licenses this file to You under the Apache License, Version 2.0
-- (the "License"); you may not use this file except in compliance with
-- the License.  You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

startSentinelPattern = "XXX_THE_START_OF_A_WHISK_ACTIVATION_XXX with id (%S+)"
endSentinel = "XXX_THE_END_OF_A_WHISK_ACTIVATION_XXX"

-- table to track last seen activationId per file:stream
activationIds = {}

local function build_key(record)
    if record.stream then
        return record.pathkey..":"..record.stream
    else
        return record.pathkey..":default"
    end
end

-- Process a potentially intermingled stream of records coming from
-- OpenWhisk user action log files and for those streams generated by
-- runtimes that support Start Sentinels, generate a stream of enriched
-- records that include the activationId in every record.
-- All sentinels and all records coming from streams that do not
-- have the expected Start Sentinels are dropped.
function process_line(tag, timestamp, record)
    local key = build_key(record)
    local id = string.match(record.log, startSentinelPattern)
    if id then
        activationIds[key] = id
        return -1, timestamp, record
    elseif string.sub(record.log, 1, #endSentinel) == endSentinel then
        activationIds[key] = nil
        return -1, timestamp, record
    elseif activationIds[key] then
        new_record = record
        new_record.activationId = activationIds[key]
        return 1, timestamp, new_record
    else
        return -1, timestamp, record
    end
end
