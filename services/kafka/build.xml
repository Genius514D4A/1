<!-- vim: set expandtab ts=4 sw=4 : -->

<project basedir="../..">
    <import file="../../docker.xml" />
    <import file="../../build.xml" />

    <!-- build the docker image for kafka -->
    <target name="buildKafka">
        <var file="whisk.properties" />
        <!-- copy files needed to build image to a scratch space -->
        <tempfile property="kafka.scratch" prefix="kafka" destDir="${docker.scratch}" />
        <mkdir dir="${kafka.scratch}" />
        <copy file="${openwhisk.dir}/services/kafka/Dockerfile" todir="${kafka.scratch}" />
        <copy todir="${kafka.scratch}">
            <fileset dir="${openwhisk.dir}/services/kafka">
                <exclude name=".**/**" />
                <exclude name="node_modules/**" />
                <exclude name="Dockerfile" />
            </fileset>
        </copy>
        <copy todir="${kafka.scratch}/common">
            <fileset dir="${openwhisk.dir}/common/js" excludes="node_modules/**" />
        </copy>

        <!-- build image -->
        <exec executable="/bin/bash" failonerror="true">
            <arg line="${openwhisk.dir}/tools/docker/dockerWithRetry.sh ${docker.timeout.long} --host tcp://${main.docker.endpoint}" />
            <arg line="${docker.tls.cmd}" />
            <arg line="build -t whisk/kafka '${kafka.scratch}'" />
        </exec>

        <!-- cleanup -->
        <delete dir="${kafka.scratch}" />
    </target>

    <target name="pushKafka" >
        <var file="whisk.properties" />
        <antcall target="pushImageToRegistry">
            <param name="docker.endpoint" value="${main.docker.endpoint}" />
            <param name="docker.image.to.push" value="whisk/kafka" />
        </antcall>
    </target>

    <!-- start kafka in a container -->
    <target name="startKafka">
        <var file="whisk.properties" />
        <antcall target="pullImageFromRegistry">
            <param name="docker.image.to.pull" value="whisk/kafka" />
            <param name="docker.endpoint" value="${kafka.docker.endpoint}" />
        </antcall>
        <exec executable="docker" failonerror="true">
            <arg line="--host tcp://${kafka.docker.endpoint}" />
            <arg line="${docker.tls.cmd}" />
            <arg line="run -d --name kafka" />
            <arg line="${docker.restart.opts}" />
            <arg line="${docker.timezone.mount}" />
            <arg line="${docker.syslog.driver}" />
            <arg line="--link zookeeper:zookeeper" />
            <arg line="-p ${kafka.host.port}:${kafka.docker.port}" />
            <arg line="-p ${kafkaras.host.port}:${kafkaras.docker.port}" />
            <arg line="-e EXPOSED_HOST=${kafka.host}" />
            <arg line="-h kafka_${kafka.docker.endpoint}" />
            <arg line="${docker.registry}whisk/kafka:${docker.image.tag}" />
        </exec>
    </target>

    <target name="waitKafka">
        <var file="whisk.properties" />
        <antcall target="waitComponent">
            <param name="component" value="kafka" />
            <param name="component.host" value="${kafka.host}:${kafkaras.host.port}" />
        </antcall>
    </target>

</project>
