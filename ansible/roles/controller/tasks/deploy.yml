---
# This role will install Controller in group 'controllers' in the environment inventory

- include: docker_login.yml

- name: "pull the {{ docker_image_tag }} image of controller"
  shell: "docker pull {{ docker_registry }}{{ docker_image_prefix }}/controller:{{ docker_image_tag }}"
  when: docker_registry != ""

- name: ensure controller log directory is created with permissions
  file:
    path: "{{ whisk_logs_dir }}/controller"
    state: directory
    mode: 0777
  become: true

- name: (re)start controller
  docker_container:
    name: controller
    image: "{{ docker_registry }}{{ docker_image_prefix }}/controller:{{ docker_image_tag }}"
    state: started
    recreate: true
    restart_policy: "{{ docker.restart.policy }}"
    hostname: controller
    env:
      "COMPONENT_NAME": "controller"
      "CONSULSERVER_HOST": "{{ groups['consul_servers'] | first }}"
      "CONSUL_HOST_PORT4": "{{ consul.port.http }}"
      "PORT": 8080
      "WHISK_VERSION_NAME": "{{ whisk_version_name }}"
      "WHISK_VERSION_DATE": "{{ whisk.version.date }}"
      "WHISK_VERSION_BUILDNO": "{{ docker_image_tag }}"
      "KAFKA_NUMPARTITIONS": 2
      "SERVICE_CHECK_HTTP": "/ping"
      "SERVICE_CHECK_TIMEOUT": "2s"
      "SERVICE_CHECK_INTERVAL": "15s"
      "JAVA_OPTS": "-Xmx{{ controller.heap }}"
      "CONTROLLER_OPTS": "{{ controller.arguments }}"

      "WHISK_LOGS_DIR": "{{ whisk_logs_dir }}"

      "DB_PREFIX": "{{ db_prefix }}"
      "DB_WHISK_ACTIONS": "{{ db.whisk.actions }}"
      "DB_WHISK_AUTHS": "{{ db.whisk.auth }}"
      "DB_WHISK_ACTIVATIONS": "{{ db.whisk.activations }}"

      "DEFAULTLIMITS_ACTIONS_INVOKES_PERMINUTE": "{{ defaultLimits.actions.invokes.perMinute }}"
      "DEFAULTLIMITS_ACTIONS_INVOKES_CONCURRENT": "{{ defaultLimits.actions.invokes.concurrent }}"
      "DEFAULTLIMITS_TRIGGERS_FIRES_PERMINUTE":"{{ defaultLimits.triggers.fires.perMinute }}"
      "DEFAULTLIMITS_ACTIONS_INVOKES_CONCURRENTINSYSTEM": "{{ defaultLimits.actions.invokes.concurrentInSystem }}"
      "DEFAULTLIMITS_ACTIONS_SEQUENCE_MAXLENGTH": "{{ defaultLimits.actions.sequence.maxLength }}"
      "LIMITS_ACTIONS_INVOKES_PERMINUTE": "{{ limits.actions.invokes.perMinute }}"
      "LIMITS_ACTIONS_INVOKES_CONCURRENT": "{{ limits.actions.invokes.concurrent }}"
      "LIMITS_ACTIONS_INVOKES_CONCURRENTINSYSTEM": "{{ limits.actions.invokes.concurrentInSystem }}"
      "LIMITS_TRIGGERS_FIRES_PERMINUTE": "{{ limits.triggers.fires.perMinute }}"
      "LOADBALANCER_ACTIVATIONCOUNTBEFORENEXTINVOKER": "{{ loadbalancer_activation_count_before_next_invoker }}"

      "WHISK_SYSTEM_KEY": "whisk.system"
      "RUNTIMES_MANIFEST": "{{ runtimesManifest | to_json }}"
    volumes:
      - "{{ whisk_logs_dir }}/controller:/logs"
    ports:
      - "{{ controller.port }}:8080"

- name: wait until the Controller in this host is up and running
  uri:
    url: "http://{{ inventory_hostname }}:{{ controller.port }}/ping"
  register: result
  until: result.status == 200
  retries: 12
  delay: 5
