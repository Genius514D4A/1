---
# This role will install Kafka with Zookeeper in group 'kafka' in the environment inventory

- name: "pull the zookeeper:{{ zookeeper.version }} image"
  shell: "docker pull zookeeper:{{ zookeeper.version }}"
  retries: "{{ docker.pull.retries }}"
  delay: "{{ docker.pull.delay }}"

- name: (re)start zookeeper
  docker_container:
    name: zookeeper
    image: zookeeper:{{ zookeeper.version }}
    state: started
    recreate: true
    restart_policy: "{{ docker.restart.policy }}"
    ports:
      - "{{ zookeeper.port }}:2181"

- name: wait until the Zookeeper in this host is up and running
  action: shell (echo ruok; sleep 1) | nc {{ ansible_host }} {{ zookeeper.port }}
  register: result
  until: (result.rc == 0) and (result.stdout == 'imok')
  retries: 36
  delay: 5


- name: "pull the {{ docker.image.tag }} image of kafka"
  shell: "docker pull {{ docker_registry }}{{ docker.image.prefix }}/kafka:{{ docker.image.tag }}"
  when: docker_registry != ""
  retries: "{{ docker.pull.retries }}"
  delay: "{{ docker.pull.delay }}"

- name: (re)start kafka
  docker_container:
    name: kafka
    image: "{{ docker_registry }}{{ docker.image.prefix }}/kafka:{{ docker.image.tag }}"
    state: started
    recreate: true
    restart_policy: "{{ docker.restart.policy }}"
    links:
      - "zookeeper:zookeeper"
    env:
      "KAFKA_ADVERTISED_HOST_NAME": "{{ ansible_host }}"
      "KAFKA_HEAP_OPTS": "-Xmx{{ kafka.heap }} -Xms{{ kafka.heap }}"
      "REPLICATION_FACTOR": "{{ kafka.replication_factor}}"
      "PARTITIONS": "{{ kafka.partitions }}"
      "ZOOKEEPER_HOST": "{{ groups['kafka']|first }}"
      "ZOOKEEPER_PORT": "{{ zookeeper.port }}"
      "KAFKA_TOPICS_HEALTH_RETENTIONBYTES": "{{ kafka.topics.health.retentionBytes }}"
      "KAFKA_TOPICS_HEALTH_RETENTIONMS": "{{ kafka.topics.health.retentionMS }}"
      "KAFKA_TOPICS_HEALTH_SEGMENTBYTES": "{{ kafka.topics.health.segmentBytes }}"
    ports:
      - "{{ kafka.port }}:9092"

- name: wait until the kafka server started up
  shell: docker logs kafka
  register: result
  until: ('Created Health topics and Kafka is running' in result.stdout)
  retries: 10
  delay: 5
