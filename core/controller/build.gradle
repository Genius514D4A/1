apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'ca.cutterslade.analyze'

ext.dockerImageName = 'controller'
apply from: '../../gradle/docker.gradle'
distDocker.dependsOn ':common:scala:distDocker', 'distTar'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.scala-lang:scala-library:${gradle.scala.version}"
    compile project(':common:scala')

    compile "io.spray:spray-json_${gradle.scala.major}.${gradle.scala.minor}:${gradle.spray_json.version}"

    compile "com.typesafe.akka:akka-actor_${gradle.scala.major}.${gradle.scala.minor}:${gradle.akka.version}"
    compile "com.typesafe.akka:akka-stream_${gradle.scala.major}.${gradle.scala.minor}:${gradle.akka.version}"
    compile "com.typesafe.akka:akka-http_${gradle.scala.major}.${gradle.scala.minor}:${gradle.akka_http.version}"
    compile "com.typesafe.akka:akka-http-core_${gradle.scala.major}.${gradle.scala.minor}:${gradle.akka_http.version}"
    compile "com.typesafe.akka:akka-http-spray-json_${gradle.scala.major}.${gradle.scala.minor}:${gradle.akka_http.version}"

    compile "com.typesafe.akka:akka-cluster_${gradle.scala.major}.${gradle.scala.minor}:${gradle.akka.version}"
    compile "com.typesafe.akka:akka-distributed-data_${gradle.scala.major}.${gradle.scala.minor}:${gradle.akka.version}"

    compile "org.apache.kafka:kafka-clients:${gradle.kafka.version}"
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = gradle.scala.compileFlags
}

mainClassName = "whisk.core.controller.Controller"
applicationDefaultJvmArgs = ["-Djava.security.egd=file:/dev/./urandom"]
